{"name":"Zf2authacl","tagline":"ZF2-Auth-ACL","body":"ZF2-Auth-ACL\r\n============\r\n\r\nBranch: zfcuser_acl\r\n-------------------\r\n\r\nThis this the ZF2 ACL module forked from arvind2110/ZF2-Auth-ACL and Plugged with zfcuser module. it will provide role base access and switching between roles , provides custom permission denied template , plug ins to access role at controller , view and module level. All the role, resource and permission are stored in databases.\r\n\r\nHow to Use it\r\n-------------------\r\n\r\nusing composer add \r\n```\r\n  \"require\" : {\r\n       ...\r\n    \"mohit-singh/zf2auth-acl\": \"V1.0.1\"\r\n  }\r\n```\r\nthen copy and rename the following,\r\n```\r\ncopy vendor/mohit-singh/zf2auth-acl/config/aclAuth.local.php.dist to config/autoload/aclAuth.local.php\r\n```\r\nAdd the depended table from \r\n```\r\nvendor/mohit-singh/zf2auth-acl/data/data.sql\r\n```\r\n\r\nADD role for user in table  e.g.\r\n```\r\nINSERT INTO `role` (`role_name`, `status`) VALUES ('Role1', 'Active');\r\nINSERT INTO `role` (`role_name`, `status`) VALUES ('Role2', 'Active');\r\nINSERT INTO `role` (`role_name`, `status`) VALUES ('Role3', 'Active');\r\n```\r\n\r\nADD resources, resources are your controller name through which you invoke your controller, for me it's \"Application\\Controller\\Index\" e.g.\r\n```\r\nINSERT INTO `resource` (`resource_name`) VALUES ('Application\\\\Controller\\\\Index');\r\n```\r\nADD Permissions , permission are the action, you have to associated all action with there controller resource  e.g.\r\n```\r\nINSERT INTO `permission` (`permission_name`, `resource_id`) VALUES ('index', 1);\r\nINSERT INTO `permission` (`permission_name`, `resource_id`) VALUES ('show', 1);\r\n```\r\nADD role permission , you have to decided which role have which permission\r\ne.g.\r\n\r\n```\r\nINSERT INTO `role_permission` (`role_id`, `permission_id`) VALUES (1, 1);\r\nINSERT INTO `role_permission` (`role_id`, `permission_id`) VALUES (1, 2);\r\n```\r\n\r\nADD user role , you have to decide which user have which role , this can be done manually or using some custom script.\r\n```\r\nINSERT INTO `user_role` (`user_id`, `role_id`) VALUES (1, 1);\r\nINSERT INTO `user_role` (`user_id`, `role_id`) VALUES (2, 2);\r\n```\r\n\r\nNOTE:- please check the aclAuth.local.php con-fig for the default role, it Should be one of the role  whatever you insert in the database.\r\n\r\nafter all these configuration is done you are ready to use ACL module\r\n\r\nServices\r\n------------\r\n\r\nRemove ACL from a URL and make it global, access to all ,\r\nadd link here\r\n```php\r\n// in config/autoload/aclAuth.local.php\r\n'globalList' => array(\r\n\t\t      'Application\\Controller\\Index-index'\r\n\t   ),\r\n```\r\n\r\nRemove ACL from a URL and make it global before login ,\r\nadd link here\r\n```php\r\n// in config/autoload/aclAuth.local.php\r\n'beforeLoginList' => array(\r\n\t\t      'Application\\Controller\\Index-index'\r\n\t   ),\r\n```\r\nCustom template for permission denied, add new template path here\r\n```php\r\n// in config/autoload/aclAuth.local.php\r\n'ACL_Template' =>'zf2-auth-acl/index/permission.phtml'\r\n```\r\nRole base services at controller\r\n```php\r\n// Check user has role or not , return true, false\r\n$this->userAuthRole()->userHasRole();\r\n\r\n//Get  user current role\r\n$this->userAuthRole()->getRoleName();\r\n\r\n//get All valid role for the current user\r\n$this->userAuthRole()->getUserValidRole();\r\n\r\n//Switch between roles\r\n$this->userAuthRole()->switchRole('ADMIN');\r\n```\r\nat view level\r\n\r\n```php\r\n// Check user has role or not , return true, false\r\n$this->roleAuth()->userHasRole();\r\n\r\n//Get  user current role\r\n$this->roleAuth()->getRoleName();\r\n\r\n//get All valid role for the current user\r\n$this->roleAuth()->getUserValidRole();\r\n\r\n//Switch between roles\r\n$this->roleAuth()->switchRole('ADMIN');\r\n```\r\nat module level\r\n\r\n```php\r\n$roleAtuth = $serviceManager->get('roleAuthService');\r\n\r\n// Check user has role or not , return true, false\r\n$roleAtuth->userHasRole();\r\n\r\n//Get  user current role\r\n$roleAtuth->getRoleName();\r\n\r\n//get All valid role for the current user\r\n$roleAtuth->getUserValidRole();\r\n\r\n//Switch between roles\r\n$roleAtuth->switchRole('ADMIN');\r\n```\r\n\r\nIt Also provide cache mechanism to store role, resource and permission in cache.\r\nyou can configure the caching here\r\n\r\n```php\r\n    /**\r\n     * This cache is used the disk file system to store date with the following options.\r\n     */ \r\n    'fileCache' => array(\r\n        'cache_dir' => './data/cache',\r\n        'namespace' => 'systemCache',\r\n        'dir_level' => 2,\r\n        'filePermission' => 0666,\r\n        'dirPermission' => 0755\r\n    ),\r\n```\r\nyou can also access file system cache in your project like this\r\n\r\n```php\r\n\r\n// store item in filesystem cache\r\n        $this->getServiceLocator()->get('Zend\\Cache\\Storage\\Filesystem')->setItem('foo', 'taxi');\r\n\r\n\r\n// get item from filesystem cache\r\n        echo 'Cached Item is:- '.$this->getServiceLocator()->get('Zend\\Cache\\Storage\\Filesystem')->getItem('foo');\r\n\r\n```\r\n\r\nyou are using file system cache so you have to give permission to the cache folder\r\n\r\n```\r\n> sudo chmod -R 0777 data/cache\r\n```\r\n\r\n\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}